import numpy as np # Импорт библиотек
import time
start = time.time() # Начало отсчёта времени
x0 = 5 # Задание начальной точки
y0 = 5
gradx = 6*y0 - 2*x0*y0 - y0**2 # Задание градиента в начальной точке
grady = 6*x0 - 2*x0*y0 - x0**2
x1 = x0 + 0.9 * gradx # Переход из начальной точки
y1 = y0 + 0.9 * grady
f0 = x0*y0*(6-x0-y0) # Значение функции в начальной точке
f1 = x1*y1*(6-x1-y1) # Значение функции в найденной точке
dxy = (np.sqrt((x0 - x1) ** 2 + (y0 - y1) ** 2)) # Приращение аргумента
df = f1 - f0 # Приращение функции
i = 0 # Переменная для счётчика итераций
while abs(df) > 0.001: # Условие останова на приращение функции
#while dxy > 0.001: # Условие останова на приращение аргумента
 gradx = 6*y0 - 2*x0*y0 - y0**2 # Вычисление градиента
 grady = 6*x0 - 2*x0*y0 - x0**2
 x1 = x0 + 0.01 * gradx # Вычисление новых точек
 y1 = y0 + 0.01 * grady
 dxy = (np.sqrt((x0 - x1) ** 2 + (y0 - y1) ** 2)) # Вычисление приращения аргумента
 i = i + 1 # Счётчик итераций
 f0 = x0 * y0 * (6 - x0 - y0) # Вычисление значения функции в начальной точке
 f1 = x1 * y1 * (6 - x1 - y1) # Вычисление значения функции в найденной точке
 df = f1 - f0 # Вычисление приращения функции
 x0 = x1 # Переобозначение найденной точки в начальную
 y0 = y1
 print('Значение ф-и z =',f1,'; Приращение ф-и delta f =',df,'; grad =',gradx,'* i + ',grady,'* j') # Вывод информации на каждом шаге
print('Точка экстремума  ','x =',x0,'y =',y0) # Вывод итогового результата
print('Значение в точки экстремума z =',f1)
print('Расхождение с реальзым значением',8-f1)
print('Итераций',i)
end = time.time() # Конец отсчёта времени
print('Время работы программы',(end - start)*1000,'мс')
